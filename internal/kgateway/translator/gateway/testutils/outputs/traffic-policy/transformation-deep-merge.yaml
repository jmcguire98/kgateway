Clusters:
- connectTimeout: 5s
  edsClusterConfig:
    edsConfig:
      ads: {}
      resourceApiVersion: V3
  ignoreHealthOnHostRemoval: true
  metadata: {}
  name: kube_default_test_80
  type: EDS
- connectTimeout: 5s
  metadata: {}
  name: test-backend-plugin_default_example-svc_80
Listeners:
- address:
    socketAddress:
      address: '::'
      ipv4Compat: true
      portValue: 8080
  filterChains:
  - filters:
    - name: envoy.filters.network.http_connection_manager
      typedConfig:
        '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
        httpFilters:
        - disabled: true
          name: transformation
          typedConfig:
            '@type': type.googleapis.com/envoy.api.v2.filter.http.FilterTransformations
        - name: envoy.filters.http.router
          typedConfig:
            '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
        mergeSlashes: true
        normalizePath: true
        rds:
          configSource:
            ads: {}
            resourceApiVersion: V3
          routeConfigName: listener~8080
        statPrefix: http
        useRemoteAddress: true
    name: listener~8080
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/default/gateway-attachment-1
        - gateway.kgateway.dev/TrafficPolicy/default/gateway-attachment-2
  name: listener~8080
Routes:
- ignorePortInHostMatching: true
  metadata:
    filterMetadata:
      merge.TrafficPolicy.gateway.kgateway.dev:
        transformation:
        - gateway.kgateway.dev/TrafficPolicy/default/gateway-attachment-1
        - gateway.kgateway.dev/TrafficPolicy/default/gateway-attachment-2
  name: listener~8080
  typedPerFilterConfig:
    transformation:
      '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
      transformations:
      - requestMatch:
          requestTransformation:
            transformationTemplate:
              headers:
                source:
                  text: gateway-attachment-2
              parseBodyBehavior: DontParse
              passthrough: {}
          responseTransformation:
            transformationTemplate:
              headers:
                source:
                  text: gateway-attachment-2
              parseBodyBehavior: DontParse
              passthrough: {}
      - requestMatch:
          requestTransformation:
            transformationTemplate:
              headers:
                source:
                  text: gateway-attachment-1
              parseBodyBehavior: DontParse
              passthrough: {}
          responseTransformation:
            transformationTemplate:
              headers:
                source:
                  text: gateway-attachment-1
              parseBodyBehavior: DontParse
              passthrough: {}
  virtualHosts:
  - domains:
    - test.com
    metadata:
      filterMetadata:
        merge.TrafficPolicy.gateway.kgateway.dev:
          transformation:
          - gateway.kgateway.dev/TrafficPolicy/default/listener-attachment-1
          - gateway.kgateway.dev/TrafficPolicy/default/listener-attachment-2
    name: listener~8080~test_com
    routes:
    - match:
        pathSeparatedPrefix: /route-0
      metadata:
        filterMetadata:
          merge.TrafficPolicy.gateway.kgateway.dev:
            transformation:
            - gateway.kgateway.dev/TrafficPolicy/default/route-attachment-1
            - gateway.kgateway.dev/TrafficPolicy/default/route-attachment-2
      name: listener~8080~test_com-route-0-httproute-test-default-0-0-rule0-matcher-0
      route:
        cluster: kube_default_test_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
      typedPerFilterConfig:
        transformation:
          '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
          transformations:
          - requestMatch:
              requestTransformation:
                transformationTemplate:
                  headers:
                    source:
                      text: route-attachment-1
                  parseBodyBehavior: DontParse
                  passthrough: {}
              responseTransformation:
                transformationTemplate:
                  headers:
                    source:
                      text: route-attachment-1
                  parseBodyBehavior: DontParse
                  passthrough: {}
          - requestMatch:
              requestTransformation:
                transformationTemplate:
                  headers:
                    source:
                      text: route-attachment-2
                  parseBodyBehavior: DontParse
                  passthrough: {}
              responseTransformation:
                transformationTemplate:
                  headers:
                    source:
                      text: route-attachment-2
                  parseBodyBehavior: DontParse
                  passthrough: {}
    - match:
        pathSeparatedPrefix: /route-1
      name: listener~8080~test_com-route-1-httproute-test-default-1-0-rule1-matcher-0
      route:
        cluster: kube_default_test_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
    - match:
        pathSeparatedPrefix: /route-2
      name: listener~8080~test_com-route-2-httproute-test-default-2-0-rule2-matcher-0
      route:
        cluster: kube_default_test_80
        clusterNotFoundResponseCode: INTERNAL_SERVER_ERROR
    typedPerFilterConfig:
      transformation:
        '@type': type.googleapis.com/envoy.api.v2.filter.http.RouteTransformations
        transformations:
        - requestMatch:
            requestTransformation:
              transformationTemplate:
                headers:
                  source:
                    text: listener-attachment-2
                parseBodyBehavior: DontParse
                passthrough: {}
            responseTransformation:
              transformationTemplate:
                headers:
                  source:
                    text: listener-attachment-2
                parseBodyBehavior: DontParse
                passthrough: {}
        - requestMatch:
            requestTransformation:
              transformationTemplate:
                headers:
                  source:
                    text: listener-attachment-1
                parseBodyBehavior: DontParse
                passthrough: {}
            responseTransformation:
              transformationTemplate:
                headers:
                  source:
                    text: listener-attachment-1
                parseBodyBehavior: DontParse
                passthrough: {}
